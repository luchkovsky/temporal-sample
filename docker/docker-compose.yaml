version: '3.5'
volumes:
  prometheus_data: {}
  grafana_data: {}
  temporal_data: {}
services:

  cassandra:
    image: cassandra:3.11
    ports:
      - "9042:9042"

  temporal:
    image: temporalio/auto-setup:0.23.1
    ports:
      - "7233:7233"
      - "7934:7934"
      - "7935:7935"
      - "7939:7939"
      - "8005:8005"
    volumes:
      - ./temporal:/config/dynamicconfig
      - temporal_data:/temporal
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "DYNAMIC_CONFIG_FILE_PATH=/config/dynamicconfig/development_local.yaml"
      - "PROMETHEUS_ENDPOINT=$BIND_ON_IP:8005"
    depends_on:
      - cassandra

  temporal-web:
    image: temporalio/web:0.23.2
    environment:
      - "TEMPORAL_GRPC_ENDPOINT=temporal:7233"
    ports:
      - "8088:8088"
    depends_on:
      - temporal

  prometheus:
    image: prom/prometheus:v2.18.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    #    network_mode: host
    labels:
      org.label-schema.group: "monitoring"

  grafana:
      image: grafana/grafana:6.7.3
      container_name: grafana
      volumes:
        - grafana_data:/var/lib/grafana
        - ./grafana/provisioning:/etc/grafana/provisioning
      environment:
        - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
        - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
        - GF_USERS_ALLOW_SIGN_UP=false
      restart: unless-stopped
      ports:
        - "3000:3000"
      labels:
        org.label-schema.group: "monitoring"
